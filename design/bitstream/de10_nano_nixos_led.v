
module hps_dummy ();

endmodule

//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module de10_nano_nixos_led(

	//////////// ADC //////////
	output		          		ADC_CONVST,
	output		          		ADC_SCK,
	output		          		ADC_SDI,
	input 		          		ADC_SDO,

	//////////// ARDUINO //////////
	inout 		    [15:0]		ARDUINO_IO,
	inout 		          		ARDUINO_RESET_N,

	//////////// CLOCK //////////
	input 		          		FPGA_CLK1_50,
	input 		          		FPGA_CLK2_50,
	input 		          		FPGA_CLK3_50,

	//////////// HDMI //////////
	inout 		          		HDMI_I2C_SCL,
	inout 		          		HDMI_I2C_SDA,
	inout 		          		HDMI_I2S,
	inout 		          		HDMI_LRCLK,
	inout 		          		HDMI_MCLK,
	inout 		          		HDMI_SCLK,
	output		          		HDMI_TX_CLK,
	output		          		HDMI_TX_DE,
	output		    [23:0]		HDMI_TX_D,
	output		          		HDMI_TX_HS,
	input 		          		HDMI_TX_INT,
	output		          		HDMI_TX_VS,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [7:0]		LED,

	//////////// SW //////////
	input 		     [3:0]		SW,

	//////////// GPIO_0, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO_0,

	//////////// GPIO_1, GPIO connect to GPIO Default //////////
	inout 		    [35:0]		GPIO_1
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
wire                fpga_clk_50;
// connection of internal logics
assign fpga_clk_50 = FPGA_CLK1_50;

hps_dummy hps_dummy();

//=======================================================
//  Structural coding
//=======================================================
wire blink;
wire [2:0] status;
amaranth_top amaranth_top(
    .clk50(fpga_clk_50),
    .blink(blink),
    .status(status),
    .button(KEY[0]),
    .GPIO_0_OUT(GPIO_0[35:34]),
    .GPIO_0_IN(GPIO_0[33:0]),
    .GPIO_1_OUT(GPIO_1[35:34]),
    .GPIO_1_IN(GPIO_1[33:0]),
);

assign LED[0] = blink;
assign LED[3:1] = status;

endmodule
